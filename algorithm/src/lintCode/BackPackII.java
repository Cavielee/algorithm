package lintCode;

/**
 * LintCode.125:背包问题II 
 * 给出n个物品的体积A[i]和其价值V[i]，将他们装入一个大小为m的背包，最多能装入的总价值有多大？ 思路：
 * dp[i][j]:意思为装载第i个物品，背包容量为j时的当前最大价值 
 * 分两种情况： 
 * 1.当A[i] >j时，意味着无论怎么腾空间都无法满足，因此直接等于dp[i-1][j] 
 * 2.为A[i]腾出空间，此时情况为dp[i-1][j-A[i]]的状态下+V[i]
 * dp[i-1][j-A[i]]代表装在第i-1个，背包容量为j-A[i]（确保腾出A[i]的容量）时的当前最大装载量
 * 放入新物品后背包最大价值可能更大，也可能变小，因此取与dp[i-1][j]中较大者
 * 
 * @author Cavielee
 *
 */
public class BackPackII {

}
